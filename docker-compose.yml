# Use the minimal version according to used features and syntax
version: "2"

networks:
  name-of-your-app:
    driver: bridge
#    ipam:
#      driver: default
#      config:
#        - subnet: 192.168.220.0/28

volumes:
  name-of-your-app-mysql-volume:
  name-of-your-app-mysql-test-volume:

services:
  http:
    image: nginx:stable-alpine
    container_name: name-of-your-app-nginx
    ports:
      - "8082:80"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./application/public:/var/www/html/public:delegated
    depends_on:
      - app
    networks:
      - name-of-your-app

  mysql:
    container_name: name-of-your-app-mysql
    image: "mysql:8.0"
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - "name-of-your-app-mysql-volume:/var/lib/mysql"
    networks:
      - name-of-your-app

  mysql-test:
    container_name: name-of-your-app-mysql-test
    image: "mysql:8.0"
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD_TESTING}"
      MYSQL_DATABASE: "${DB_DATABASE_TESTING}"
      MYSQL_USER: "${DB_USERNAME_TESTING}"
      MYSQL_PASSWORD: "${DB_PASSWORD_TESTING}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - "name-of-your-app-mysql-test-volume:/var/lib/mysql"
    networks:
      - name-of-your-app

#  phpmyadmin:
#    container_name: name-of-your-app-phpmyadmin
#    image: phpmyadmin
#    restart: always
#    ports:
#      - 8080:80
#    environment:
#      - PMA_ARBITRARY=1
#      - UPLOAD_LIMIT=20M
#    networks:
#      - name-of-your-app

  redis:
    image: "redis:5.0.3-alpine"
    container_name: name-of-your-app-redis
    restart: unless-stopped
    networks:
      - name-of-your-app
  # should be set in docker-compose.override.yml
  #    ports:
  #      - "${REDIS_PORT}:6379"

#  mailhog:
#    image: "mailhog/mailhog:v1.0.1"
#    container_name: name-of-your-app-mailhog
#    restart: unless-stopped
#    ports:
#      - "8080:8025"
  # should be set in docker-compose.override.yml
  #    ports:
  #      - "${MAILHOG_SMTP_PORT}:1025"
  #      - "${MAILHOG_WEB_PORT}:8025"

  npm:
    container_name: name-of-your-app-npm
    image: node:14
    command: npm start
    working_dir: /app
    entrypoint: [ "npm" ]
    volumes:
      - "./application/:/app"
    networks:
      - name-of-your-app

  app:
    build:
      context: ./docker
      dockerfile: php/Dockerfile
    container_name: name-of-your-app-app
    networks:
      - name-of-your-app
#    ports:
#      - "25:8025"
#          - "9003:9003"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      XDEBUG_CONFIG: remote_host=172.17.0.1 remote_port=9003 remote_enable=1 remote_autostart=1 xdebug.idekey=PHPSTORM
      PHP_IDE_CONFIG: "serverName=NameOfYourAppDocker"
    volumes:
      - ./application:/var/www/html:delegated
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - mysql
      - redis
